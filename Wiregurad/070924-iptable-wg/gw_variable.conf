# /root/gateway/config.sh

# Tunnel Details
declare -a lantun=("lan-t1" "lan-t2")
declare -a wantun=("wan-t1" "wan-t2")

# Physical Interface
declare -a lan_interface=("eno1")
declare -a wan_interface=("eno2" "ens2f0np0")

# Zones Details
declare -A zones=(
    ["lantz"]="lan-t1 lan-t2"
    ["wantz"]="wan-t1 wan-t2" 
    ["external"]="ens2f0np0 eno2"    
    ["public"]="eno1"
)

# Policy
declare -a rules=(
    "lantz wantz accept"
)

# Firewall Rules
declare -A firewall_rules=(
    ["lan-t1"]="443/tcp 80/tcp 7119/tcp 1179/tcp"
    ["lan-t2"]="443/tcp 80/tcp 7119/tcp 1179/tcp"
)

# For active internet connections
declare -a active_interfaces=()

# Declare array for valid ports
declare -a validPort=("tcp" "udp" "icmp")
declare -a wg_ports=("51830" "51831" "51832" "51833")



  # Path to the external variables file
variables_file="/etc/myscript/variables.sh"

# Check if the file exists and source it
if [[ -f "$variables_file" ]]; then
    source "$variables_file"
else
    echo "Variables file not found at $variables_file. Exiting..."
    exit 1
fi



required_gateway_pacakges=("curl wget git vim firewalld cockpit net-tools traceroute wireguard-tools zsh uzip")

install_gw(){
	# Check internet
	sudo dnf update -y
	sudo dnf install -y "$required_gateway_pacakges"  
  # Create sample wg file in wireguard location
  # create directory in /root/gateway/
  # Create config file for gateway config.sh
  # Create gateway service in service
  # Copy self into /usr/share/bin as gateway
  # Change mode to +x 
  # Download and install wireguard dashboard
  # Change wireguard.ini file ip address
  # Create wgdashboard service
  # Enable both the service and reload services
  # install kali shell 
  # Create normal user apple with password apple
  # Disable root ssh  
  # Reboot system ask for reboot
  # Show Message config file location etc
  # Delete self from the system.
}

